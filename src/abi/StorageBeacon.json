[
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "inbox",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "ops",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "OZL",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "emitter",
            "type": "address"
          },
          {
            "internalType": "address payable",
            "name": "gelato",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "ETH",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "maxGas",
            "type": "uint256"
          }
        ],
        "internalType": "struct IStorageBeacon.FixedConfig",
        "name": "fxConfig_",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "contract ISwapRouter",
            "name": "swapRouter",
            "type": "address"
          },
          {
            "internalType": "contract AggregatorV3Interface",
            "name": "priceFeed",
            "type": "address"
          },
          {
            "internalType": "uint24",
            "name": "poolFee",
            "type": "uint24"
          },
          {
            "internalType": "address",
            "name": "tokenIn",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "tokenOut",
            "type": "address"
          }
        ],
        "internalType": "struct IStorageBeacon.EmergencyMode",
        "name": "eMode_",
        "type": "tuple"
      },
      {
        "internalType": "address[]",
        "name": "tokens_",
        "type": "address[]"
      },
      {
        "internalType": "bytes4[]",
        "name": "selectors_",
        "type": "bytes4[]"
      },
      {
        "internalType": "uint256",
        "name": "gasPriceBid_",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "NotAccount",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "token",
        "type": "address"
      }
    ],
    "name": "TokenAlreadyInDatabase",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "token",
        "type": "address"
      }
    ],
    "name": "TokenNotInDatabase",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newGasPriceBid",
        "type": "uint256"
      }
    ],
    "name": "L2GasPriceChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "accountToDetails",
    "outputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "slippage",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "name",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "selector_",
        "type": "bytes4"
      }
    ],
    "name": "addAuthorizedSelector",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newToken_",
        "type": "address"
      }
    ],
    "name": "addTokenToDatabase",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "contract ISwapRouter",
            "name": "swapRouter",
            "type": "address"
          },
          {
            "internalType": "contract AggregatorV3Interface",
            "name": "priceFeed",
            "type": "address"
          },
          {
            "internalType": "uint24",
            "name": "poolFee",
            "type": "uint24"
          },
          {
            "internalType": "address",
            "name": "tokenIn",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "tokenOut",
            "type": "address"
          }
        ],
        "internalType": "struct IStorageBeacon.EmergencyMode",
        "name": "newEmode_",
        "type": "tuple"
      }
    ],
    "name": "changeEmergencyMode",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bool",
        "name": "newStatus_",
        "type": "bool"
      }
    ],
    "name": "changeEmitterStatus",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "newGasPriceBid_",
        "type": "uint256"
      }
    ],
    "name": "changeGasPriceBid",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account_",
        "type": "address"
      }
    ],
    "name": "getAccountPayments",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user_",
        "type": "address"
      }
    ],
    "name": "getAccountsByUser",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      },
      {
        "internalType": "string[]",
        "name": "",
        "type": "string[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getEmergencyMode",
    "outputs": [
      {
        "components": [
          {
            "internalType": "contract ISwapRouter",
            "name": "swapRouter",
            "type": "address"
          },
          {
            "internalType": "contract AggregatorV3Interface",
            "name": "priceFeed",
            "type": "address"
          },
          {
            "internalType": "uint24",
            "name": "poolFee",
            "type": "uint24"
          },
          {
            "internalType": "address",
            "name": "tokenIn",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "tokenOut",
            "type": "address"
          }
        ],
        "internalType": "struct IStorageBeacon.EmergencyMode",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getEmitterStatus",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getFixedConfig",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "inbox",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "ops",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "OZL",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "emitter",
            "type": "address"
          },
          {
            "internalType": "address payable",
            "name": "gelato",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "ETH",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "maxGas",
            "type": "uint256"
          }
        ],
        "internalType": "struct IStorageBeacon.FixedConfig",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getGasPriceBid",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account_",
        "type": "address"
      }
    ],
    "name": "getTaskID",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTokenDatabase",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account_",
        "type": "address"
      }
    ],
    "name": "getUserByAccount",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "selector_",
        "type": "bytes4"
      }
    ],
    "name": "isSelectorAuthorized",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user_",
        "type": "address"
      }
    ],
    "name": "isUser",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "token_",
        "type": "address"
      }
    ],
    "name": "queryTokenDatabase",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "toRemove_",
        "type": "address"
      }
    ],
    "name": "removeTokenFromDatabase",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account_",
        "type": "address"
      },
      {
        "internalType": "bytes32",
        "name": "id_",
        "type": "bytes32"
      }
    ],
    "name": "saveTaskId",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account_",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "slippage",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          }
        ],
        "internalType": "struct IStorageBeacon.AccountConfig",
        "name": "acc_",
        "type": "tuple"
      }
    ],
    "name": "saveUserToDetails",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account_",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "payment_",
        "type": "uint256"
      }
    ],
    "name": "storeAccountPayment",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "beacon_",
        "type": "address"
      }
    ],
    "name": "storeBeacon",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]